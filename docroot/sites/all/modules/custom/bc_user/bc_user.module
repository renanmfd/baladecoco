<?php

/**
 * @file
 * Module file for bc_user module.
 */

/**
 * Implements HOOK_theme().
 */
function bc_user_theme() {
  $items = array();

  $items['user_login'] = array(
    'render element' => 'form',
    'path' => drupal_get_path('module', 'bc_user') . '/templates',
    'template' => 'bc-user--login',
    'preprocess functions' => array(
      '_bc_user_forms',
      '_bc_user_preprocess_user_login'
    ),
  );

  $items['user_register_form'] = array(
    'render element' => 'form',
    'path' => drupal_get_path('module', 'bc_user') . '/templates',
    'template' => 'bc-user--register-form',
    'preprocess functions' => array(
      '_bc_user_forms',
      '_bc_user_preprocess_user_register_form'
    ),
  );

  $items['user_pass'] = array(
    'render element' => 'form',
    'path' => drupal_get_path('module', 'bc_user') . '/templates',
    'template' => 'bc-user--pass',
    'preprocess functions' => array(
      '_bc_user_forms',
      '_bc_user_preprocess_user_pass'
    ),
  );

  $items['user_form_header'] = array(
    'path' => drupal_get_path('module', 'bc_user') . '/templates',
    'template' => 'bc-user--header',
    'variables' => array(
      'url' => '',
      'classes' => '',
    ),
  );

  return $items;
}

/**
 * Preprocess for all user forms on theme.
 */
function _bc_user_forms(&$vars) {
  // Configuring form
  $vars['classes_array'][] = 'user-form';
  $vars['form']['#attributes'] = array('class' => array('user-forms'));
  $vars['attributes_array'] = array();
  $vars['title_attributes_array'] = array();
  $vars['content_attributes_array'] = array();

  // Add header links and icons for user forms.
  $vars['form_header'] = theme('user_form_header', array(
    'url' => $_GET['q'],
    'classes' => 'form-header',
  ));

  // Add script for fields client-size validation.
  drupal_add_js(drupal_get_path('theme', 'bc_theme') . '/js/validation.js');

  // Add required fields text just bellow submit button.
  $vars['form']['actions']['submit']['#suffix'] = '<span class="required-text">' . t('* Required fields.') . '</span>';
}

/**
 * Preprocess for user_login theme.
 */
function _bc_user_preprocess_user_login(&$vars) {
  $vars['classes_array'][] = 'user-login';
  $vars['intro_text'] = t('Login');

  // Tooltip
  $vars['form']['remember_me']['#description'] = t('Keep you logged in this computer and browser.');
}

/**
 * Preprocess for user_register_form theme.
 */
function _bc_user_preprocess_user_register_form(&$vars) {
  $vars['classes_array'][] = 'user-register';
  $vars['intro_text'] = t('Registration');

  // Tooltip
  $vars['form']['account']['pass']['pass1']['#description'] = t('Enter a secure password.');
  $vars['form']['account']['pass']['pass2']['#description'] = t('Confirm your password.');
}

/**
 * Preprocess for user_pass theme.
 */
function _bc_user_preprocess_user_pass(&$vars) {
  $vars['classes_array'][] = 'user-pass';
  $vars['intro_text'] = t('Password recovery');

  // Tooltip
  $vars['form']['name']['#description'] = t('Enter your e-mail address. We will send you a link to reset your password.');
}

/**
 * Helper function to add tooltips to labels.
 */
function _bc_user_form_label_tooltip(&$form_element, $placement = 'left') {
  $desc = isset($form_element['#description'])? $form_element['#description']: '';
  $form_element['#label_attributes'] = array(
    'data-toggle' => 'tooltip',
    'data-placement' => $placement,
    'title' => $desc,
  );
}

/**
 * Implements HOOK_form_FORMID_alter().
 */
function bc_user_form_user_profile_form_alter(&$form, &$form_state, $form_id) {
  $form['picture']['#weight'] = 9;
  $form['field_address']['#weight'] = 10;
  $form['field_address'][LANGUAGE_NONE][0]['locality_block']['#weight'] = -999;
  $form['field_address'][LANGUAGE_NONE][0]['country']['#weight'] = 999;
  $form['field_address'][LANGUAGE_NONE][0]['locality_block']['postal_code']['#weight'] = -999; // cep
  $form['field_address'][LANGUAGE_NONE][0]['locality_block']['administrative_area']['#weight'] = -990; // state
  $form['field_address'][LANGUAGE_NONE][0]['locality_block']['locality']['#weight'] = -980; // city
  $form['field_address'][LANGUAGE_NONE][0]['locality_block']['dependent_locality']['#weight'] = -970; // bairro
  $form['actions']['submit']['#suffix'] = '<span class="required-text">' . t('* Required fields.') . '</span>';
  $form['header'] = array(
    '#markup' => '<div class="form-header"><span>' . t('Profile edit') . '</span></div>',
    '#weight' => -9999,
  );
}
