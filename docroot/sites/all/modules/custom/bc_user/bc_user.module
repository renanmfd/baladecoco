<?php

/**
 * @file
 * Module file for bc_user module.
 */

/**
 * Implements HOOK_theme().
 */
function bc_user_theme() {
  $items = array();

  $items['user_login'] = array(
    'render element' => 'form',
    'path' => drupal_get_path('module', 'bc_user') . '/templates',
    'template' => 'bc-user--login',
    'preprocess functions' => array(
      '_bc_user_forms',
      '_bc_user_preprocess_user_login'
    ),
  );

  $items['user_register_form'] = array(
    'render element' => 'form',
    'path' => drupal_get_path('module', 'bc_user') . '/templates',
    'template' => 'bc-user--register-form',
    'preprocess functions' => array(
      '_bc_user_forms',
      '_bc_user_preprocess_user_register_form'
    ),
  );

  $items['user_pass'] = array(
    'render element' => 'form',
    'path' => drupal_get_path('module', 'bc_user') . '/templates',
    'template' => 'bc-user--pass',
    'preprocess functions' => array(
      '_bc_user_forms',
      '_bc_user_preprocess_user_pass'
    ),
  );

  $items['user_form_header'] = array(
    'path' => drupal_get_path('module', 'bc_user') . '/templates',
    'template' => 'bc-user--header',
    'variables' => array(
      'form_id' => '',
      'classes' => '',
    ),
  );

  return $items;
}

/**
 * Preprocess for all user forms on theme.
 */
function _bc_user_forms(&$vars) {
  // Configuring form
  $vars['classes_array'][] = 'user-form';
  $vars['form']['#attributes']['class'][] = 'user-forms';
  $vars['attributes_array'] = array();
  $vars['title_attributes_array'] = array();
  $vars['content_attributes_array'] = array();

  // Add header links and icons for user forms.
  $vars['form_header'] = theme('user_form_header', array(
    'form_id' => $vars['form']['#form_id'],
    'classes' => 'form-header',
  ));

  // Add script for fields client-size validation.
  drupal_add_js(drupal_get_path('theme', 'bc_theme') . '/js/validation.js');

  // Add required fields text just bellow submit button.
  $vars['form']['actions']['submit']['#suffix'] = '<span class="required-text">' . t('* Required fields.') . '</span>';
}

/**
 * Preprocess for user_login theme.
 */
function _bc_user_preprocess_user_login(&$vars) {
  $vars['classes_array'][] = 'user-login';
  $vars['intro_text'] = t('Login');

  // Tooltip
  $vars['form']['remember_me']['#description'] = t('Keep you logged in this computer and browser.');
}

/**
 * Preprocess for user_register_form theme.
 */
function _bc_user_preprocess_user_register_form(&$vars) {
  $vars['classes_array'][] = 'user-register';
  $vars['intro_text'] = t('Registration');

  // Tooltip
  $vars['form']['account']['pass']['pass1']['#description'] = t('Enter a secure password.');
  $vars['form']['account']['pass']['pass2']['#description'] = t('Confirm your password.');
}

/**
 * Preprocess for user_pass theme.
 */
function _bc_user_preprocess_user_pass(&$vars) {
  $vars['classes_array'][] = 'user-pass';
  $vars['intro_text'] = t('Password recovery');
  dpm($vars['form']);
  // Tooltip
  $vars['form']['name']['#description'] = t('Enter your e-mail address. We will send you a link to reset your password.');
}

/**
 * Helper function to add tooltips to labels.
 * Legacy function. Not used anymore.
 */
function _bc_user_form_label_tooltip(&$form_element, $placement = 'left') {
  $desc = isset($form_element['#description'])? $form_element['#description']: '';
  $form_element['#label_attributes'] = array(
    'data-toggle' => 'tooltip',
    'data-placement' => $placement,
    'title' => $desc,
  );
}

/**
 * Implements HOOK_form_FORMID_alter().
 */
function bc_user_form_user_profile_form_alter(&$form, &$form_state, $form_id) {
  $form['picture']['#weight'] = 9;
  $form['field_address']['#weight'] = 10;
  $form['field_address'][LANGUAGE_NONE][0]['locality_block']['#weight'] = -999;
  $form['field_address'][LANGUAGE_NONE][0]['country']['#weight'] = 999;
  $form['field_address'][LANGUAGE_NONE][0]['locality_block']['postal_code']['#weight'] = -999; // cep
  $form['field_address'][LANGUAGE_NONE][0]['locality_block']['administrative_area']['#weight'] = -990; // state
  $form['field_address'][LANGUAGE_NONE][0]['locality_block']['locality']['#weight'] = -980; // city
  $form['field_address'][LANGUAGE_NONE][0]['locality_block']['dependent_locality']['#weight'] = -970; // bairro
  $form['actions']['submit']['#suffix'] = '<span class="required-text">' . t('* Required fields.') . '</span>';
  $form['header'] = array(
    '#markup' => '<div class="form-header"><span>' . t('Profile edit') . '</span></div>',
    '#weight' => -9999,
  );
}

/**
 * Implements HOOK_menu().
 */
function bc_user_menu() {
  $items = array();

  $items['modal/%ctools_js/user/%'] = array(
    'title' => 'Login',
    'page callback' => '_bc_user_login_callback',
    'page arguments' => array(1, 3), 
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
  );

  return $items;
}

/**
 * Callback for modal login form.
 */
function _bc_user_login_callback($js = NULL, $type) {
  // Detect wich form will be rendered in modal mode.
  $form_id = NULL;
  if ($type == 'register') {
    $form_id = 'user_register_form';
  }
  else if ($type == 'password') {
    $form_id = 'user_pass';
  }
  else {
    $form_id = 'user_login';
  }

  // If javascript is disabled, return the form alone.
  if (!$js) {
    return drupal_get_form($form_id);
  }

  // Inlcude ctools.
  ctools_include('modal');
  ctools_include('ajax');

  $form_state = array(
    'title' => t('User Form'),
    'ajax' => TRUE,
  );
  $output = ctools_modal_form_wrapper($form_id, $form_state);

  if (!empty($form_state['executed'])) {
    // We'll just overwrite the form output if it was successful.
    $output = array();
    // Dismiss the modal.
    $output[] = ctools_modal_command_dismiss();
    $output[] = ctools_ajax_command_redirect('home');
  }
  print ajax_render($output);
  exit;
}

/**
 * Implements HOOK_preprocess_page().
 */
function bc_user_preprocess_page(&$vars) {
  // Include the CTools tools that we need.
  ctools_include('ajax');
  ctools_include('modal');

  // Add custom style to modal forms.
  $close = t('Close');
  $user_style = array(
    'user-modal-style' => array(
      'modalSize' => array(
        'type' => 'fixed',
        'width' => 400,
        'height' => 'auto',
        'addWidth' => 10,
        'addHeight' => 10,
        'contentRight' => 0,
        'contentBottom' => 0,
      ),
      'modalOptions' => array(
        'opacity' => .6,
        'background-color' => '#684C31',
      ),
      'animation' => 'fadeIn',
      'throbber' => '<span class="icon icon-spinner3"></span>',
      'closeText' => '',
      'closeImage' => "<span class=\"icon icon-cross\" title=\"{$close}\" data-toggle=\"tooltip\"></span>",
    ),
  );
  drupal_add_js($user_style, 'setting');

  // Add CTools' javascript to the page.
  ctools_modal_add_js();
  ctools_add_js('ajax-responder');
}
